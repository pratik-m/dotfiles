[sqlfluff]
# Supported dialects https://docs.sqlfluff.com/en/stable/perma/dialects.html
# Or run 'sqlfluff dialects'
dialect = redshift 
# One of [raw|jinja|python|placeholder]
templater = raw 
# Comma separated list of rules to check, default to all
rules = all

# Comma separated list of rules to exclude, or None
# AM04 - Query produces an unknown number of result columns. `select *`
exclude_rules = AM04

# Below controls SQLFluff output, see max_line_length for SQL output
output_line_length = 120 

# Ignore errors by category (one or more of the following, separated by commas: lexing,linting,parsing,templating)
ignore = templating 

# Warn only for rule codes (one of more rule codes, separated by commas: e.g. LT01,LT02)
# Also works for templating and parsing errors by using TMP or PRS
warnings = None

# Whether to warn about unneeded '-- noqa:' comments.
warn_unused_ignores = False

# Ignore linting errors found within sections of code coming directly from
# templated code (e.g. from within Jinja curly braces. Note that it does not
# ignore errors from literal code found within template loops.
ignore_templated_areas = True

large_file_skip_char_limit = 0
large_file_skip_byte_limit = 0

# CPU processes to use while linting.
# If positive, just implies number of processes.
# If negative or zero, implies number_of_cpus - specified_number.
# e.g. -1 means use all processors but one. 0  means all cpus.
processes = -1

# Max line length is set by default to be in line with the dbt style guide.
# https://github.com/dbt-labs/corp/blob/main/dbt_style_guide.md
# Set to zero or negative to disable checks.
max_line_length = 120
  
[sqlfluff:indentation]
# See https://docs.sqlfluff.com/en/stable/perma/indent_locations.html
indent_unit = space
tab_space_size = 2
indented_joins = False
indented_ctes = False
indented_using_on = False
indented_on_contents = False
indented_then = True
indented_then_contents = True
allow_implicit_indents = False 
template_blocks_indent = True

# Layout configuration
# See https://docs.sqlfluff.com/en/stable/perma/layout_spacing.html
[sqlfluff:layout:type:comma]
spacing_after = single 
line_position = leading

[sqlfluff:layout:type:statement_terminator]
spacing_before = touch
spacing_after = single

[sqlfluff:layout:type:select_clause]
line_position = alone
keyword_line_position = leading

[sqlfluff:layout:type:where_clause]
line_position = alone
keyword_line_position = leading
keyword_line_position_exclusions = pipe_operator_clause

[sqlfluff:layout:type:from_clause] 
line_position = alone
keyword_line_position = leading

[sqlfluff:layout:type:join_clause]
line_position = alone:strict
keyword_line_position = leading


[sqlfluff:rules:capitalisation.keywords]
# Keywords
# capitalisation_policy = consistent
capitalisation_policy = lower

[sqlfluff:rules:capitalisation.identifiers]
# Unquoted identifiers
extended_capitalisation_policy = consistent

[sqlfluff:rules:capitalisation.functions]
# Function names
extended_capitalisation_policy = lower 

[sqlfluff:rules:capitalisation.literals]
# Null & Boolean Literals
capitalisation_policy = lower

[sqlfluff:rules:capitalisation.types]
# Data Types
extended_capitalisation_policy = lower

[sqlfluff:rules:convention.terminator]
# Semi-colon formatting approach
multiline_newline =  True
require_final_semicolon = False

[sqlfluff:rules:references.special_chars]
# Special characters in identifiers
unquoted_identifiers_policy = all
quoted_identifiers_policy = all
allow_space_in_identifier = False
additional_allowed_characters = False
ignore_words = None
ignore_words_regex = None

[sqlfluff:rules:layout.long_lines]
# Line length
ignore_comment_lines = True
ignore_comment_clauses = False

[sqlfluff:rules:layout.newlines]
maximum_empty_lines_between_statements = 2
maximum_empty_lines_inside_statements = 1

[sqlfluff:layout:type:column_constraint_segment]
spacing_before = align
align_within = create_table_statement

[sqlfluff:layout:type:data_type]
spacing_before = align
align_within = create_table_statement

# align select statements 
#[sqlfluff:layout:type:alias_expression]
#spacing_before = align
#align_within = select_clause
#align_scope = bracketed
